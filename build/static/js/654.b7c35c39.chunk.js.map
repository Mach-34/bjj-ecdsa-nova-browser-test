{"version":3,"file":"static/js/654.b7c35c39.chunk.js","mappings":"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","sources":["../node_modules/babyjubjub-ecdsa-nova/snippets/nova-scotia-a8e7e2c19d37f2f2/src/circom/wasm_deps/generate_witness_browser.js","../node_modules/babyjubjub-ecdsa-nova/snippets/wasm-bindgen-rayon-3e04391371ad0a8e/src/workerHelpers.js","../node_modules/babyjubjub-ecdsa-nova/babyjubjub_ecdsa_nova.js","../node_modules/babyjubjub-ecdsa-nova/snippets/wasm-bindgen-rayon-3e04391371ad0a8e/src/workerHelpers.worker.js","../webpack/bootstrap","../webpack/runtime/get javascript chunk filename","../webpack/runtime/global","../webpack/runtime/hasOwnProperty shorthand","../webpack/runtime/publicPath","../webpack/runtime/importScripts chunk loading","../webpack/startup"],"sourcesContent":["// TODO: can these reads be cached?\nexport async function read_file_async(path) {\n  const response = await fetch(path);\n  const bytes = await response.arrayBuffer();\n  const res = new Uint8Array(bytes);\n  return res;\n}\n\nexport async function generate_witness_browser_async(\n  input_json_string,\n  wasm_file\n) {\n  const input = JSON.parse(input_json_string);\n  const buffer = await read_file_async(wasm_file);\n  const witnessCalculator = await wc(buffer);\n  const buff = await witnessCalculator.calculateWTNSBin(input, 0);\n  return buff;\n}\n\n// It gives me great pain to do this, but witness_calculator.js needs to be copied here\n// so wasm-pack would pick it up :(\nconst wc = async function builder(code, options) {\n  options = options || {};\n\n  let wasmModule;\n  try {\n    wasmModule = await WebAssembly.compile(code);\n  } catch (err) {\n    console.log(err);\n    console.log(\n      \"\\nTry to run circom --c in order to generate c++ code instead\\n\"\n    );\n    throw new Error(err);\n  }\n\n  let wc;\n\n  let errStr = \"\";\n  let msgStr = \"\";\n\n  const instance = await WebAssembly.instantiate(wasmModule, {\n    runtime: {\n      exceptionHandler: function (code) {\n        let err;\n        if (code == 1) {\n          err = \"Signal not found.\\n\";\n        } else if (code == 2) {\n          err = \"Too many signals set.\\n\";\n        } else if (code == 3) {\n          err = \"Signal already set.\\n\";\n        } else if (code == 4) {\n          err = \"Assert Failed.\\n\";\n        } else if (code == 5) {\n          err = \"Not enough memory.\\n\";\n        } else if (code == 6) {\n          err = \"Input signal array access exceeds the size.\\n\";\n        } else {\n          err = \"Unknown error.\\n\";\n        }\n        throw new Error(err + errStr);\n      },\n      printErrorMessage: function () {\n        errStr += getMessage() + \"\\n\";\n        // console.error(getMessage());\n      },\n      writeBufferMessage: function () {\n        const msg = getMessage();\n        // Any calls to `log()` will always end with a `\\n`, so that's when we print and reset\n        if (msg === \"\\n\") {\n          console.log(msgStr);\n          msgStr = \"\";\n        } else {\n          // If we've buffered other content, put a space in between the items\n          if (msgStr !== \"\") {\n            msgStr += \" \";\n          }\n          // Then append the message to the message we are creating\n          msgStr += msg;\n        }\n      },\n      showSharedRWMemory: function () {\n        printSharedRWMemory();\n      },\n    },\n  });\n\n  const sanityCheck = options;\n  //        options &&\n  //        (\n  //            options.sanityCheck ||\n  //            options.logGetSignal ||\n  //            options.logSetSignal ||\n  //            options.logStartComponent ||\n  //            options.logFinishComponent\n  //        );\n\n  wc = new WitnessCalculator(instance, sanityCheck);\n  return wc;\n\n  function getMessage() {\n    var message = \"\";\n    var c = instance.exports.getMessageChar();\n    while (c != 0) {\n      message += String.fromCharCode(c);\n      c = instance.exports.getMessageChar();\n    }\n    return message;\n  }\n\n  function printSharedRWMemory() {\n    const shared_rw_memory_size = instance.exports.getFieldNumLen32();\n    const arr = new Uint32Array(shared_rw_memory_size);\n    for (let j = 0; j < shared_rw_memory_size; j++) {\n      arr[shared_rw_memory_size - 1 - j] =\n        instance.exports.readSharedRWMemory(j);\n    }\n\n    // If we've buffered other content, put a space in between the items\n    if (msgStr !== \"\") {\n      msgStr += \" \";\n    }\n    // Then append the value to the message we are creating\n    msgStr += fromArray32(arr).toString();\n  }\n};\n\nclass WitnessCalculator {\n  constructor(instance, sanityCheck) {\n    this.instance = instance;\n\n    this.version = this.instance.exports.getVersion();\n    this.n32 = this.instance.exports.getFieldNumLen32();\n\n    this.instance.exports.getRawPrime();\n    const arr = new Uint32Array(this.n32);\n    for (let i = 0; i < this.n32; i++) {\n      arr[this.n32 - 1 - i] = this.instance.exports.readSharedRWMemory(i);\n    }\n    this.prime = fromArray32(arr);\n\n    this.witnessSize = this.instance.exports.getWitnessSize();\n\n    this.sanityCheck = sanityCheck;\n  }\n\n  circom_version() {\n    return this.instance.exports.getVersion();\n  }\n\n  async _doCalculateWitness(input, sanityCheck) {\n    //input is assumed to be a map from signals to arrays of bigints\n    this.instance.exports.init(this.sanityCheck || sanityCheck ? 1 : 0);\n    const keys = Object.keys(input);\n    var input_counter = 0;\n    keys.forEach((k) => {\n      const h = fnvHash(k);\n      const hMSB = parseInt(h.slice(0, 8), 16);\n      const hLSB = parseInt(h.slice(8, 16), 16);\n      const fArr = flatArray(input[k]);\n      let signalSize = this.instance.exports.getInputSignalSize(hMSB, hLSB);\n      if (signalSize < 0) {\n        throw new Error(`Signal ${k} not found\\n`);\n      }\n      if (fArr.length < signalSize) {\n        throw new Error(`Not enough values for input signal ${k}\\n`);\n      }\n      if (fArr.length > signalSize) {\n        throw new Error(`Too many values for input signal ${k}\\n`);\n      }\n      for (let i = 0; i < fArr.length; i++) {\n        const arrFr = toArray32(normalize(fArr[i], this.prime), this.n32);\n        for (let j = 0; j < this.n32; j++) {\n          this.instance.exports.writeSharedRWMemory(j, arrFr[this.n32 - 1 - j]);\n        }\n        try {\n          this.instance.exports.setInputSignal(hMSB, hLSB, i);\n          input_counter++;\n        } catch (err) {\n          // console.log(`After adding signal ${i} of ${k}`)\n          throw new Error(err);\n        }\n      }\n    });\n    if (input_counter < this.instance.exports.getInputSize()) {\n      throw new Error(\n        `Not all inputs have been set. Only ${input_counter} out of ${this.instance.exports.getInputSize()}`\n      );\n    }\n  }\n\n  async calculateWitness(input, sanityCheck) {\n    const w = [];\n\n    await this._doCalculateWitness(input, sanityCheck);\n\n    for (let i = 0; i < this.witnessSize; i++) {\n      this.instance.exports.getWitness(i);\n      const arr = new Uint32Array(this.n32);\n      for (let j = 0; j < this.n32; j++) {\n        arr[this.n32 - 1 - j] = this.instance.exports.readSharedRWMemory(j);\n      }\n      w.push(fromArray32(arr));\n    }\n\n    return w;\n  }\n\n  async calculateBinWitness(input, sanityCheck) {\n    const buff32 = new Uint32Array(this.witnessSize * this.n32);\n    const buff = new Uint8Array(buff32.buffer);\n    await this._doCalculateWitness(input, sanityCheck);\n\n    for (let i = 0; i < this.witnessSize; i++) {\n      this.instance.exports.getWitness(i);\n      const pos = i * this.n32;\n      for (let j = 0; j < this.n32; j++) {\n        buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n      }\n    }\n\n    return buff;\n  }\n\n  async calculateWTNSBin(input, sanityCheck) {\n    const buff32 = new Uint32Array(this.witnessSize * this.n32 + this.n32 + 11);\n    const buff = new Uint8Array(buff32.buffer);\n    await this._doCalculateWitness(input, sanityCheck);\n\n    //\"wtns\"\n    buff[0] = \"w\".charCodeAt(0);\n    buff[1] = \"t\".charCodeAt(0);\n    buff[2] = \"n\".charCodeAt(0);\n    buff[3] = \"s\".charCodeAt(0);\n\n    //version 2\n    buff32[1] = 2;\n\n    //number of sections: 2\n    buff32[2] = 2;\n\n    //id section 1\n    buff32[3] = 1;\n\n    const n8 = this.n32 * 4;\n    //id section 1 length in 64bytes\n    const idSection1length = 8 + n8;\n    const idSection1lengthHex = idSection1length.toString(16);\n    buff32[4] = parseInt(idSection1lengthHex.slice(0, 8), 16);\n    buff32[5] = parseInt(idSection1lengthHex.slice(8, 16), 16);\n\n    //this.n32\n    buff32[6] = n8;\n\n    //prime number\n    this.instance.exports.getRawPrime();\n\n    var pos = 7;\n    for (let j = 0; j < this.n32; j++) {\n      buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n    }\n    pos += this.n32;\n\n    // witness size\n    buff32[pos] = this.witnessSize;\n    pos++;\n\n    //id section 2\n    buff32[pos] = 2;\n    pos++;\n\n    // section 2 length\n    const idSection2length = n8 * this.witnessSize;\n    const idSection2lengthHex = idSection2length.toString(16);\n    buff32[pos] = parseInt(idSection2lengthHex.slice(0, 8), 16);\n    buff32[pos + 1] = parseInt(idSection2lengthHex.slice(8, 16), 16);\n\n    pos += 2;\n    for (let i = 0; i < this.witnessSize; i++) {\n      this.instance.exports.getWitness(i);\n      for (let j = 0; j < this.n32; j++) {\n        buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n      }\n      pos += this.n32;\n    }\n\n    return buff;\n  }\n}\n\nfunction toArray32(rem, size) {\n  const res = []; //new Uint32Array(size); //has no unshift\n  const radix = BigInt(0x100000000);\n  while (rem) {\n    res.unshift(Number(rem % radix));\n    rem = rem / radix;\n  }\n  if (size) {\n    var i = size - res.length;\n    while (i > 0) {\n      res.unshift(0);\n      i--;\n    }\n  }\n  return res;\n}\n\nfunction fromArray32(arr) {\n  //returns a BigInt\n  var res = BigInt(0);\n  const radix = BigInt(0x100000000);\n  for (let i = 0; i < arr.length; i++) {\n    res = res * radix + BigInt(arr[i]);\n  }\n  return res;\n}\n\nfunction flatArray(a) {\n  var res = [];\n  fillArray(res, a);\n  return res;\n\n  function fillArray(res, a) {\n    if (Array.isArray(a)) {\n      for (let i = 0; i < a.length; i++) {\n        fillArray(res, a[i]);\n      }\n    } else {\n      res.push(a);\n    }\n  }\n}\n\nfunction normalize(n, prime) {\n  let res = BigInt(n) % prime;\n  if (res < 0) res += prime;\n  return res;\n}\n\nfunction fnvHash(str) {\n  const uint64_max = BigInt(2) ** BigInt(64);\n  let hash = BigInt(\"0xCBF29CE484222325\");\n  for (var i = 0; i < str.length; i++) {\n    hash ^= BigInt(str[i].charCodeAt());\n    hash *= BigInt(0x100000001b3);\n    hash %= uint64_max;\n  }\n  let shash = hash.toString(16);\n  let n = 16 - shash.length;\n  shash = \"0\".repeat(n).concat(shash);\n  return shash;\n}\n","/*\r\n * Copyright 2022 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Note: this is never used, but necessary to prevent a bug in Firefox\r\n// (https://bugzilla.mozilla.org/show_bug.cgi?id=1702191) where it collects\r\n// Web Workers that have a shared WebAssembly memory with the main thread,\r\n// but are not explicitly rooted via a `Worker` instance.\r\n//\r\n// By storing them in a variable, we can keep `Worker` objects around and\r\n// prevent them from getting GC-d.\r\nlet _workers;\r\n\r\nexport async function startWorkers(module, memory, builder) {\r\n  if (builder.numThreads() === 0) {\r\n    throw new Error(`num_threads must be > 0.`);\r\n  }\r\n\r\n  const workerInit = {\r\n    module,\r\n    memory,\r\n    receiver: builder.receiver()\r\n  };\r\n\r\n  _workers = await Promise.all(\r\n    Array.from({ length: builder.numThreads() }, async () => {\r\n      // Self-spawn into a new Worker.\r\n      //\r\n      // TODO: while `new URL('...', import.meta.url) becomes a semi-standard\r\n      // way to get asset URLs relative to the module across various bundlers\r\n      // and browser, ideally we should switch to `import.meta.resolve`\r\n      // once it becomes a standard.\r\n      const worker = new Worker(\r\n        new URL('./workerHelpers.worker.js', import.meta.url),\r\n        {\r\n          type: 'module'\r\n        }\r\n      );\r\n      worker.postMessage(workerInit);\r\n      await new Promise(resolve =>\r\n        worker.addEventListener('message', resolve, { once: true })\r\n      );\r\n      return worker;\r\n    })\r\n  );\r\n  builder.build();\r\n}\r\n","import { read_file_async, generate_witness_browser_async } from './snippets/nova-scotia-a8e7e2c19d37f2f2/src/circom/wasm_deps/generate_witness_browser.js';\nimport { startWorkers } from './snippets/wasm-bindgen-rayon-3e04391371ad0a8e/src/workerHelpers.js';\n\nlet wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().slice(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nconst CLOSURE_DTORS = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(state => {\n    wasm.__wbindgen_export_3.get(state.dtor)(state.a, state.b)\n});\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_3.get(state.dtor)(a, state.b);\n                CLOSURE_DTORS.unregister(state);\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n    CLOSURE_DTORS.register(real, state, state);\n    return real;\n}\nfunction __wbg_adapter_32(arg0, arg1, arg2) {\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7349eef91e40c952(arg0, arg1, addHeapObject(arg2));\n}\n\n/**\n*/\nexport function init_panic_hook() {\n    wasm.init_panic_hook();\n}\n\n/**\n*\n* * Get the public parameters file for the folding operation\n* *\n* * @return - the stringified public_params.json file\n*\n* @returns {Promise<string>}\n*/\nexport function get_pp_file() {\n    const ret = wasm.get_pp_file();\n    return takeObject(ret);\n}\n\n/**\n*\n* * Get the spartan proving key file for compression and zk\n* *\n* * @return - the stringified pk.json file\n*\n* @returns {Promise<string>}\n*/\nexport function get_pk_file() {\n    const ret = wasm.get_pk_file();\n    return takeObject(ret);\n}\n\n/**\n*\n* * Get the spartan verification key file for verifying compressed spartan zk proof\n* *\n* * @return - the stringified vk.json file\n*\n* @returns {Promise<string>}\n*/\nexport function get_vk_file() {\n    const ret = wasm.get_vk_file();\n    return takeObject(ret);\n}\n\n/**\n* Verify a proof\n* @param {string} params_string\n* @param {string} proof_string\n* @param {number} num_steps\n* @returns {Promise<Array<any>>}\n*/\nexport function verify_proof(params_string, proof_string, num_steps) {\n    const ptr0 = passStringToWasm0(params_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(proof_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_proof(ptr0, len0, ptr1, len1, addHeapObject(num_steps));\n    return takeObject(ret);\n}\n\n/**\n* Generates a new proof\n* @param {string} r1cs_url\n* @param {string} wasm_url\n* @param {string} params_string\n* @param {string} membership_string\n* @returns {Promise<string>}\n*/\nexport function generate_proof(r1cs_url, wasm_url, params_string, membership_string) {\n    const ptr0 = passStringToWasm0(r1cs_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(wasm_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(params_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ptr3 = passStringToWasm0(membership_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len3 = WASM_VECTOR_LEN;\n    const ret = wasm.generate_proof(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\n\n/**\n*\n* * Compute the next step of a proof\n* *\n* * @param params_string - the stringified public parameters file\n* * @param proof_string - the stringified proof file\n* * @param membership_string - the stringified membership inputs\n* * @param zi_primary - the step_out of previous proof and step_in for this proof\n* * @return - the stringified proof file\n*\n* @param {string} r1cs_url\n* @param {string} wasm_url\n* @param {string} params_string\n* @param {string} proof_string\n* @param {string} membership_string\n* @param {Array<any>} zi_primary\n* @returns {Promise<string>}\n*/\nexport function continue_proof(r1cs_url, wasm_url, params_string, proof_string, membership_string, zi_primary) {\n    const ptr0 = passStringToWasm0(r1cs_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(wasm_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(params_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ptr3 = passStringToWasm0(proof_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len3 = WASM_VECTOR_LEN;\n    const ptr4 = passStringToWasm0(membership_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len4 = WASM_VECTOR_LEN;\n    const ret = wasm.continue_proof(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, addHeapObject(zi_primary));\n    return takeObject(ret);\n}\n\n/**\n* @param {string} params_string\n* @param {string} proving_key_string\n* @param {string} proof_string\n* @returns {Promise<string>}\n*/\nexport function compress_to_spartan(params_string, proving_key_string, proof_string) {\n    const ptr0 = passStringToWasm0(params_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(proving_key_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(proof_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.compress_to_spartan(ptr0, len0, ptr1, len1, ptr2, len2);\n    return takeObject(ret);\n}\n\n/**\n* @param {string} verifier_key_string\n* @param {string} proof_string\n* @param {number} iterations\n* @returns {Promise<Array<any>>}\n*/\nexport function verify_spartan(verifier_key_string, proof_string, iterations) {\n    const ptr0 = passStringToWasm0(verifier_key_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(proof_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_spartan(ptr0, len0, ptr1, len1, addHeapObject(iterations));\n    return takeObject(ret);\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4, 4) >>> 0;\n    const mem = getUint32Memory0();\n    for (let i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n\nlet stack_pointer = 128;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* Handler for `console.log` invocations.\n*\n* If a test is currently running it takes the `args` array and stringifies\n* it and appends it to the current output of the test. Otherwise it passes\n* the arguments to the original `console.log` function, psased as\n* `original`.\n* @param {Array<any>} args\n*/\nexport function __wbgtest_console_log(args) {\n    try {\n        wasm.__wbgtest_console_log(addBorrowedObject(args));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* Handler for `console.debug` invocations. See above.\n* @param {Array<any>} args\n*/\nexport function __wbgtest_console_debug(args) {\n    try {\n        wasm.__wbgtest_console_debug(addBorrowedObject(args));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* Handler for `console.info` invocations. See above.\n* @param {Array<any>} args\n*/\nexport function __wbgtest_console_info(args) {\n    try {\n        wasm.__wbgtest_console_info(addBorrowedObject(args));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* Handler for `console.warn` invocations. See above.\n* @param {Array<any>} args\n*/\nexport function __wbgtest_console_warn(args) {\n    try {\n        wasm.__wbgtest_console_warn(addBorrowedObject(args));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* Handler for `console.error` invocations. See above.\n* @param {Array<any>} args\n*/\nexport function __wbgtest_console_error(args) {\n    try {\n        wasm.__wbgtest_console_error(addBorrowedObject(args));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\nfunction __wbg_adapter_64(arg0, arg1) {\n    wasm.wasm_bindgen__convert__closures__invoke0_mut__h8932db997fb4011f(arg0, arg1);\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n* @param {string} path\n* @returns {Promise<Uint8Array>}\n*/\nexport function read_file(path) {\n    const ptr0 = passStringToWasm0(path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.read_file(ptr0, len0);\n    return takeObject(ret);\n}\n\n/**\n* @param {string} input_json_string\n* @param {string} wasm_file\n* @returns {Promise<Uint8Array>}\n*/\nexport function generate_witness_browser(input_json_string, wasm_file) {\n    const ptr0 = passStringToWasm0(input_json_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(wasm_file, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.generate_witness_browser(ptr0, len0, ptr1, len1);\n    return takeObject(ret);\n}\n\nfunction __wbg_adapter_155(arg0, arg1, arg2, arg3, arg4) {\n    wasm.wasm_bindgen__convert__closures__invoke3_mut__h2980d311b0172268(arg0, arg1, addHeapObject(arg2), arg3, addHeapObject(arg4));\n}\n\nfunction __wbg_adapter_182(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__h2f24ac3ce8b9065a(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n* @param {number} num_threads\n* @returns {Promise<any>}\n*/\nexport function initThreadPool(num_threads) {\n    const ret = wasm.initThreadPool(num_threads);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} receiver\n*/\nexport function wbg_rayon_start_worker(receiver) {\n    wasm.wbg_rayon_start_worker(receiver);\n}\n\nconst WasmBindgenTestContextFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_wasmbindgentestcontext_free(ptr >>> 0));\n/**\n* Runtime test harness support instantiated in JS.\n*\n* The node.js entry script instantiates a `Context` here which is used to\n* drive test execution.\n*/\nexport class WasmBindgenTestContext {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        WasmBindgenTestContextFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmbindgentestcontext_free(ptr);\n    }\n    /**\n    * Creates a new context ready to run tests.\n    *\n    * A `Context` is the main structure through which test execution is\n    * coordinated, and this will collect output and results for all executed\n    * tests.\n    */\n    constructor() {\n        const ret = wasm.wasmbindgentestcontext_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Inform this context about runtime arguments passed to the test\n    * harness.\n    * @param {any[]} args\n    */\n    args(args) {\n        const ptr0 = passArrayJsValueToWasm0(args, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.wasmbindgentestcontext_args(this.__wbg_ptr, ptr0, len0);\n    }\n    /**\n    * Executes a list of tests, returning a promise representing their\n    * eventual completion.\n    *\n    * This is the main entry point for executing tests. All the tests passed\n    * in are the JS `Function` object that was plucked off the\n    * `WebAssembly.Instance` exports list.\n    *\n    * The promise returned resolves to either `true` if all tests passed or\n    * `false` if at least one test failed.\n    * @param {any[]} tests\n    * @returns {Promise<any>}\n    */\n    run(tests) {\n        const ptr0 = passArrayJsValueToWasm0(tests, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.wasmbindgentestcontext_run(this.__wbg_ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n}\n\nconst wbg_rayon_PoolBuilderFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_wbg_rayon_poolbuilder_free(ptr >>> 0));\n/**\n*/\nexport class wbg_rayon_PoolBuilder {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(wbg_rayon_PoolBuilder.prototype);\n        obj.__wbg_ptr = ptr;\n        wbg_rayon_PoolBuilderFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        wbg_rayon_PoolBuilderFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wbg_rayon_poolbuilder_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    numThreads() {\n        const ret = wasm.wbg_rayon_poolbuilder_numThreads(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    receiver() {\n        const ret = wasm.wbg_rayon_poolbuilder_receiver(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    build() {\n        wasm.wbg_rayon_poolbuilder_build(this.__wbg_ptr);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_now_ca4db0732fe747ba = function(arg0) {\n        const ret = getObject(arg0).now();\n        return ret;\n    };\n    imports.wbg.__wbg_log_4db2b3a5fe32a073 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_cb_drop = function(arg0) {\n        const obj = takeObject(arg0).original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        const ret = false;\n        return ret;\n    };\n    imports.wbg.__wbg_static_accessor_performance_11eeb10a2a01e97a = function() {\n        const ret = performance;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_fetch_27eb4c0a08a9ca04 = function(arg0) {\n        const ret = fetch(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_log_2a5709457fad1c18 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_String_7f654bc5beb8a6ba = function(arg0, arg1) {\n        const ret = String(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_getElementById_642ca9087d0ba015 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getElementById(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_settextcontent_86918b0c20998752 = function(arg0, arg1, arg2) {\n        getObject(arg0).textContent = getStringFromWasm0(arg1, arg2);\n    };\n    imports.wbg.__wbg_wbgtestinvoke_033e629b159d2260 = function() { return handleError(function (arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = () => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_64(a, state0.b, );\n                } finally {\n                    state0.a = a;\n                }\n            };\n            __wbg_test_invoke(cb0);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    }, arguments) };\n    imports.wbg.__wbg_static_accessor_document_12cabad9f461ef50 = function() {\n        const ret = document;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_textcontent_a8d17ab03d4e4103 = function(arg0, arg1) {\n        const ret = getObject(arg1).textContent;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_stack_6c88eb77b2d25b5b = function(arg0) {\n        const ret = getObject(arg0).stack;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_d65c999b9952db3d = function(arg0) {\n        const ret = getObject(arg0).self;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_constructor_81a268f98d193d8c = function(arg0) {\n        const ret = getObject(arg0).constructor;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_name_78f75ebef39cbdd8 = function(arg0, arg1) {\n        const ret = getObject(arg1).name;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_stack_23fbdaf18c60859b = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_wbgtestoutputwriteln_f40fe3ffa10d4424 = function(arg0) {\n        __wbg_test_output_writeln(takeObject(arg0));\n    };\n    imports.wbg.__wbg_stack_c8eb9f112db2c3eb = function(arg0) {\n        const ret = getObject(arg0).stack;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_generatewitnessbrowserasync_b382537b674d8915 = function(arg0, arg1, arg2, arg3) {\n        const ret = generate_witness_browser_async(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_readfileasync_631b508da962cc69 = function(arg0, arg1) {\n        const ret = read_file_async(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_link_c83fa9fa3333cb90 = function(arg0) {\n        const ret = \"data:application/javascript,\" + encodeURIComponent(`onmessage = function (ev) {\n            let [ia, index, value] = ev.data;\n            ia = new Int32Array(ia.buffer);\n            let result = Atomics.wait(ia, index, value);\n            postMessage(result);\n        };\n        `);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_waitAsync_92219692955aa445 = function() {\n        const ret = Atomics.waitAsync;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_waitAsync_ecc6bb0101f0b119 = function(arg0, arg1, arg2) {\n        const ret = Atomics.waitAsync(getObject(arg0), arg1, arg2);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_async_d412da4fadd37b75 = function(arg0) {\n        const ret = getObject(arg0).async;\n        return ret;\n    };\n    imports.wbg.__wbg_value_ceb95bfbc794ce19 = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_queueMicrotask_f61ee94ee663068b = function(arg0) {\n        queueMicrotask(getObject(arg0));\n    };\n    imports.wbg.__wbg_queueMicrotask_f82fc5d1e8f816ae = function(arg0) {\n        const ret = getObject(arg0).queueMicrotask;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_fetch_10edd7d7da150227 = function(arg0, arg1) {\n        const ret = getObject(arg0).fetch(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_instanceof_Window_cee7a886d55e7df5 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Window;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_data_bbdd2d77ab2f7e78 = function(arg0) {\n        const ret = getObject(arg0).data;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithstrandinit_11fbc38beb4c26b0 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = new Request(getStringFromWasm0(arg0, arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_Response_b5451a06784a2404 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Response;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_url_e319aee56d26ddf1 = function(arg0, arg1) {\n        const ret = getObject(arg1).url;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_status_bea567d1049f0b6a = function(arg0) {\n        const ret = getObject(arg0).status;\n        return ret;\n    };\n    imports.wbg.__wbg_headers_96d9457941f08a33 = function(arg0) {\n        const ret = getObject(arg0).headers;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_arrayBuffer_eb2005809be09726 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).arrayBuffer();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_text_24a1c9b21feed3de = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).text();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_signal_8fbb4942ce477464 = function(arg0) {\n        const ret = getObject(arg0).signal;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_92cc7d259297256c = function() { return handleError(function () {\n        const ret = new AbortController();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_abort_510372063dd66b29 = function(arg0) {\n        getObject(arg0).abort();\n    };\n    imports.wbg.__wbg_new_4db22fd5d40c5665 = function() { return handleError(function () {\n        const ret = new Headers();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_append_b2e8ed692fc5eb6e = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).append(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_setonmessage_69d6948a76937c04 = function(arg0, arg1) {\n        getObject(arg0).onmessage = getObject(arg1);\n    };\n    imports.wbg.__wbg_new_cc1b6504e92f2e3c = function() { return handleError(function (arg0, arg1) {\n        const ret = new Worker(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_postMessage_64df7b91855fc1fb = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).postMessage(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_get_0ee8ea3c7c984c45 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newnoargs_cfecb3965268594c = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_next_586204376d2ed373 = function(arg0) {\n        const ret = getObject(arg0).next;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_b2d3366343a208b3 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_done_90b14d6f6eacc42f = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_value_3158be908c80a75e = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_iterator_40027cdd598da26b = function() {\n        const ret = Symbol.iterator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_3fddfed2c83f434c = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_3f093dd26d5569f8 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_632630b5cec17f21 = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_05040bd9523805b9 = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_adc720039f2cb14f = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_622105db80c1457d = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_f56b013ed9bcf359 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_newwithlength_a20dc3b27e1cb1b2 = function(arg0) {\n        const ret = new Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_79c308ecd9a1d091 = function(arg0, arg1, arg2) {\n        getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_forEach_110b7f39368dd5d8 = function(arg0, arg1, arg2) {\n        try {\n            var state0 = {a: arg1, b: arg2};\n            var cb0 = (arg0, arg1, arg2) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_155(a, state0.b, arg0, arg1, arg2);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            getObject(arg0).forEach(cb0);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_of_94ac9e20a3c46ec5 = function(arg0, arg1, arg2) {\n        const ret = Array.of(getObject(arg0), getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_message_2a19bb5b62cf8e22 = function(arg0) {\n        const ret = getObject(arg0).message;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_name_405bb0aa047a1bf5 = function(arg0) {\n        const ret = getObject(arg0).name;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_67f2111acd2dfdb6 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_70828a4353259d4b = function(arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = (arg0, arg1) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_182(a, state0.b, arg0, arg1);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            const ret = new Promise(cb0);\n            return addHeapObject(ret);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_resolve_5da6faf2c96fd1d5 = function(arg0) {\n        const ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_f9e58f5a50f43eae = function(arg0, arg1) {\n        const ret = getObject(arg0).then(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_20a5920e447d1cb1 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_b914fb8b50ebbc3e = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_e4dd61c29af24331 = function(arg0) {\n        const ret = new Int32Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_0de9ee56e9f6ee6e = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_b1f2d6842d615181 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_7d988c98e6ced92d = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_21c4b0ae73cba59d = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_has_ad45eb020184f624 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.has(getObject(arg0), getObject(arg1));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_set_961700853a212a39 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_stringify_865daa6fb8c83d5a = function() { return handleError(function (arg0) {\n        const ret = JSON.stringify(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_rethrow = function(arg0) {\n        throw takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_module = function() {\n        const ret = __wbg_init.__wbindgen_wasm_module;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_startWorkers_2ee336a9694dda13 = function(arg0, arg1, arg2) {\n        const ret = startWorkers(takeObject(arg0), takeObject(arg1), wbg_rayon_PoolBuilder.__wrap(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper2806 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 702, __wbg_adapter_32);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper2807 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 702, __wbg_adapter_32);\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n    imports.wbg.memory = maybe_memory || new WebAssembly.Memory({initial:22,maximum:65536,shared:true});\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedFloat64Memory0 = null;\n    cachedInt32Memory0 = null;\n    cachedUint32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module, maybe_memory) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports, maybe_memory);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input, maybe_memory) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('babyjubjub_ecdsa_nova_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports, maybe_memory);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","/*\r\n * Copyright 2022 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Note: our JS should have been generated in\r\n// `[out-dir]/snippets/wasm-bindgen-rayon-[hash]/workerHelpers.worker.js`,\r\n// resolve the main module via `../../..`.\r\n//\r\n// This might need updating if the generated structure changes on wasm-bindgen\r\n// side ever in the future, but works well with bundlers today. The whole\r\n// point of this crate, after all, is to abstract away unstable features\r\n// and temporary bugs so that you don't need to deal with them in your code.\r\nimport initWbg, { wbg_rayon_start_worker } from '../../../';\r\n\r\nonmessage = async ({ data: { module, memory, receiver } }) => {\r\n  await initWbg(module, memory);\r\n  postMessage(true);\r\n  wbg_rayon_start_worker(receiver);\r\n};\r\n","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\t// no module.id needed\n\t\t// no module.loaded needed\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId](module, module.exports, __webpack_require__);\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","// This function allow to reference async chunks\n__webpack_require__.u = (chunkId) => {\n\t// return url for filenames based on template\n\treturn \"static/js/\" + chunkId + \".\" + \"b7c35c39\" + \".chunk.js\";\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","__webpack_require__.p = \"/\";","__webpack_require__.b = self.location + \"/../../../\";\n\n// object to store loaded chunks\n// \"1\" means \"already loaded\"\nvar installedChunks = {\n\t654: 1\n};\n\n// no chunk install function needed\n// no chunk loading\n\n// no HMR\n\n// no HMR manifest","// startup\n// Load entry module and return exports\n// This entry module is referenced by other modules so it can't be inlined\nvar __webpack_exports__ = __webpack_require__(654);\n"],"names":["async","read_file_async","path","response","fetch","bytes","arrayBuffer","Uint8Array","wc","code","options","wasmModule","WebAssembly","compile","err","console","log","Error","errStr","msgStr","instance","instantiate","runtime","exceptionHandler","printErrorMessage","getMessage","writeBufferMessage","msg","showSharedRWMemory","shared_rw_memory_size","exports","getFieldNumLen32","arr","Uint32Array","j","readSharedRWMemory","fromArray32","toString","printSharedRWMemory","WitnessCalculator","message","c","getMessageChar","String","fromCharCode","constructor","sanityCheck","this","version","getVersion","n32","getRawPrime","i","prime","witnessSize","getWitnessSize","circom_version","_doCalculateWitness","input","init","keys","Object","input_counter","forEach","k","h","str","uint64_max","BigInt","hash","length","charCodeAt","shash","n","repeat","concat","fnvHash","hMSB","parseInt","slice","hLSB","fArr","a","res","fillArray","Array","isArray","push","flatArray","signalSize","getInputSignalSize","arrFr","toArray32","normalize","writeSharedRWMemory","setInputSignal","getInputSize","calculateWitness","w","getWitness","calculateBinWitness","buff32","buff","buffer","pos","calculateWTNSBin","n8","idSection1lengthHex","idSection2lengthHex","rem","size","radix","unshift","Number","_workers","wasm","heap","fill","undefined","getObject","idx","heap_next","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","memory","cachedTextEncoder","TextEncoder","encode","encodeString","arg","view","buf","set","read","written","passStringToWasm0","malloc","realloc","ptr","subarray","len","mem","offset","isLikeNone","x","cachedInt32Memory0","getInt32Memory0","Int32Array","cachedFloat64Memory0","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","getStringFromWasm0","addHeapObject","obj","debugString","val","type","description","name","debug","builtInMatches","exec","call","className","JSON","stringify","_","stack","CLOSURE_DTORS","FinalizationRegistry","register","unregister","state","__wbindgen_export_3","get","dtor","b","makeMutClosure","arg0","arg1","f","cnt","real","_len","arguments","args","_key","original","__wbg_adapter_32","arg2","_dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7349eef91e40c952","cachedUint32Memory0","handleError","apply","e","__wbindgen_exn_store","__wbg_wasmbindgentestcontext_free","wbg_rayon_PoolBuilderFinalization","__wbg_wbg_rayon_poolbuilder_free","wbg_rayon_PoolBuilder","__wrap","create","prototype","__wbg_ptr","__destroy_into_raw","free","numThreads","wbg_rayon_poolbuilder_numThreads","receiver","wbg_rayon_poolbuilder_receiver","build","wbg_rayon_poolbuilder_build","__wbg_get_imports","imports","wbg","__wbindgen_object_drop_ref","__wbindgen_string_get","ptr1","__wbindgen_malloc","__wbindgen_realloc","len1","__wbindgen_number_get","Float64Array","__wbindgen_string_new","__wbg_now_ca4db0732fe747ba","now","__wbg_log_4db2b3a5fe32a073","__wbindgen_number_new","__wbindgen_cb_drop","__wbg_static_accessor_performance_11eeb10a2a01e97a","performance","__wbindgen_object_clone_ref","__wbg_fetch_27eb4c0a08a9ca04","__wbg_log_2a5709457fad1c18","__wbg_String_7f654bc5beb8a6ba","__wbg_getElementById_642ca9087d0ba015","getElementById","__wbg_settextcontent_86918b0c20998752","textContent","__wbg_wbgtestinvoke_033e629b159d2260","state0","__wbg_test_invoke","cb0","wasm_bindgen__convert__closures__invoke0_mut__h8932db997fb4011f","__wbg_adapter_64","__wbg_static_accessor_document_12cabad9f461ef50","document","__wbg_textcontent_a8d17ab03d4e4103","__wbg_stack_6c88eb77b2d25b5b","__wbg_self_d65c999b9952db3d","self","__wbg_constructor_81a268f98d193d8c","__wbg_name_78f75ebef39cbdd8","__wbg_stack_23fbdaf18c60859b","__wbg_wbgtestoutputwriteln_f40fe3ffa10d4424","__wbg_test_output_writeln","__wbg_stack_c8eb9f112db2c3eb","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","__wbg_error_f851667af71bcfc6","deferred0_0","deferred0_1","error","__wbindgen_free","__wbg_generatewitnessbrowserasync_b382537b674d8915","arg3","input_json_string","wasm_file","parse","witnessCalculator","generate_witness_browser_async","__wbg_readfileasync_631b508da962cc69","__wbindgen_link_c83fa9fa3333cb90","encodeURIComponent","__wbg_waitAsync_92219692955aa445","Atomics","waitAsync","__wbindgen_is_undefined","__wbg_waitAsync_ecc6bb0101f0b119","__wbg_async_d412da4fadd37b75","__wbg_value_ceb95bfbc794ce19","value","__wbg_queueMicrotask_f61ee94ee663068b","queueMicrotask","__wbg_queueMicrotask_f82fc5d1e8f816ae","__wbindgen_is_function","__wbg_fetch_10edd7d7da150227","__wbg_instanceof_Window_cee7a886d55e7df5","result","Window","__wbg_data_bbdd2d77ab2f7e78","data","__wbg_newwithstrandinit_11fbc38beb4c26b0","Request","__wbg_instanceof_Response_b5451a06784a2404","Response","__wbg_url_e319aee56d26ddf1","url","__wbg_status_bea567d1049f0b6a","status","__wbg_headers_96d9457941f08a33","headers","__wbg_arrayBuffer_eb2005809be09726","__wbg_text_24a1c9b21feed3de","text","__wbg_signal_8fbb4942ce477464","signal","__wbg_new_92cc7d259297256c","AbortController","__wbg_abort_510372063dd66b29","abort","__wbg_new_4db22fd5d40c5665","Headers","__wbg_append_b2e8ed692fc5eb6e","arg4","append","__wbg_setonmessage_69d6948a76937c04","onmessage","__wbg_new_cc1b6504e92f2e3c","Worker","__wbg_postMessage_64df7b91855fc1fb","postMessage","__wbg_get_0ee8ea3c7c984c45","__wbg_newnoargs_cfecb3965268594c","Function","__wbindgen_is_object","__wbg_next_586204376d2ed373","next","__wbg_next_b2d3366343a208b3","__wbg_done_90b14d6f6eacc42f","done","__wbg_value_3158be908c80a75e","__wbg_iterator_40027cdd598da26b","Symbol","iterator","__wbg_get_3fddfed2c83f434c","Reflect","__wbg_call_3f093dd26d5569f8","__wbg_new_632630b5cec17f21","__wbg_self_05040bd9523805b9","__wbg_window_adc720039f2cb14f","window","__wbg_globalThis_622105db80c1457d","globalThis","__wbg_global_f56b013ed9bcf359","global","__wbg_newwithlength_a20dc3b27e1cb1b2","__wbg_set_79c308ecd9a1d091","__wbg_forEach_110b7f39368dd5d8","wasm_bindgen__convert__closures__invoke3_mut__h2980d311b0172268","__wbg_adapter_155","__wbg_of_94ac9e20a3c46ec5","of","__wbg_message_2a19bb5b62cf8e22","__wbg_name_405bb0aa047a1bf5","__wbg_call_67f2111acd2dfdb6","__wbg_new_70828a4353259d4b","Promise","wasm_bindgen__convert__closures__invoke2_mut__h2f24ac3ce8b9065a","__wbg_adapter_182","__wbg_resolve_5da6faf2c96fd1d5","resolve","__wbg_then_f9e58f5a50f43eae","then","__wbg_then_20a5920e447d1cb1","__wbg_buffer_b914fb8b50ebbc3e","__wbg_new_e4dd61c29af24331","__wbg_newwithbyteoffsetandlength_0de9ee56e9f6ee6e","__wbg_new_b1f2d6842d615181","__wbg_set_7d988c98e6ced92d","__wbg_length_21c4b0ae73cba59d","__wbg_has_ad45eb020184f624","has","__wbg_set_961700853a212a39","__wbg_stringify_865daa6fb8c83d5a","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_module","__wbg_init","__wbindgen_wasm_module","__wbindgen_memory","__wbg_startWorkers_2ee336a9694dda13","module","builder","workerInit","all","from","worker","URL","addEventListener","once","startWorkers","__wbindgen_closure_wrapper2806","__wbindgen_closure_wrapper2807","__wbg_init_memory","maybe_memory","Memory","initial","maximum","shared","__wbg_finalize_init","__wbindgen_start","instantiateStreaming","warn","Instance","__wbg_load","_ref","initWbg","wbg_rayon_start_worker","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","__webpack_modules__","m","u","chunkId","g","o","prop","hasOwnProperty","p","location"],"sourceRoot":""}