{"version":3,"file":"static/js/480.b7d074e1.chunk.js","mappings":"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","sources":["../node_modules/babyjubjub-ecdsa-nova/babyjubjub_ecdsa_nova.js","../node_modules/babyjubjub-ecdsa-nova/snippets/nova-scotia-a8e7e2c19d37f2f2/src/circom/wasm_deps/generate_witness_browser.js","../node_modules/babyjubjub-ecdsa-nova/snippets/wasm-bindgen-rayon-3e04391371ad0a8e/src/workerHelpers.js"],"sourcesContent":["import { read_file_async, generate_witness_browser_async } from './snippets/nova-scotia-a8e7e2c19d37f2f2/src/circom/wasm_deps/generate_witness_browser.js';\nimport { startWorkers } from './snippets/wasm-bindgen-rayon-3e04391371ad0a8e/src/workerHelpers.js';\n\nlet wasm;\n\nconst heap = new Array(128).fill(undefined);\n\nheap.push(undefined, null, true, false);\n\nfunction getObject(idx) { return heap[idx]; }\n\nlet heap_next = heap.length;\n\nfunction dropObject(idx) {\n    if (idx < 132) return;\n    heap[idx] = heap_next;\n    heap_next = idx;\n}\n\nfunction takeObject(idx) {\n    const ret = getObject(idx);\n    dropObject(idx);\n    return ret;\n}\n\nlet WASM_VECTOR_LEN = 0;\n\nlet cachedUint8Memory0 = null;\n\nfunction getUint8Memory0() {\n    if (cachedUint8Memory0 === null || cachedUint8Memory0.buffer !== wasm.memory.buffer) {\n        cachedUint8Memory0 = new Uint8Array(wasm.memory.buffer);\n    }\n    return cachedUint8Memory0;\n}\n\nconst cachedTextEncoder = (typeof TextEncoder !== 'undefined' ? new TextEncoder('utf-8') : { encode: () => { throw Error('TextEncoder not available') } } );\n\nconst encodeString = function (arg, view) {\n    const buf = cachedTextEncoder.encode(arg);\n    view.set(buf);\n    return {\n        read: arg.length,\n        written: buf.length\n    };\n};\n\nfunction passStringToWasm0(arg, malloc, realloc) {\n\n    if (realloc === undefined) {\n        const buf = cachedTextEncoder.encode(arg);\n        const ptr = malloc(buf.length, 1) >>> 0;\n        getUint8Memory0().subarray(ptr, ptr + buf.length).set(buf);\n        WASM_VECTOR_LEN = buf.length;\n        return ptr;\n    }\n\n    let len = arg.length;\n    let ptr = malloc(len, 1) >>> 0;\n\n    const mem = getUint8Memory0();\n\n    let offset = 0;\n\n    for (; offset < len; offset++) {\n        const code = arg.charCodeAt(offset);\n        if (code > 0x7F) break;\n        mem[ptr + offset] = code;\n    }\n\n    if (offset !== len) {\n        if (offset !== 0) {\n            arg = arg.slice(offset);\n        }\n        ptr = realloc(ptr, len, len = offset + arg.length * 3, 1) >>> 0;\n        const view = getUint8Memory0().subarray(ptr + offset, ptr + len);\n        const ret = encodeString(arg, view);\n\n        offset += ret.written;\n        ptr = realloc(ptr, len, offset, 1) >>> 0;\n    }\n\n    WASM_VECTOR_LEN = offset;\n    return ptr;\n}\n\nfunction isLikeNone(x) {\n    return x === undefined || x === null;\n}\n\nlet cachedInt32Memory0 = null;\n\nfunction getInt32Memory0() {\n    if (cachedInt32Memory0 === null || cachedInt32Memory0.buffer !== wasm.memory.buffer) {\n        cachedInt32Memory0 = new Int32Array(wasm.memory.buffer);\n    }\n    return cachedInt32Memory0;\n}\n\nlet cachedFloat64Memory0 = null;\n\nfunction getFloat64Memory0() {\n    if (cachedFloat64Memory0 === null || cachedFloat64Memory0.buffer !== wasm.memory.buffer) {\n        cachedFloat64Memory0 = new Float64Array(wasm.memory.buffer);\n    }\n    return cachedFloat64Memory0;\n}\n\nconst cachedTextDecoder = (typeof TextDecoder !== 'undefined' ? new TextDecoder('utf-8', { ignoreBOM: true, fatal: true }) : { decode: () => { throw Error('TextDecoder not available') } } );\n\nif (typeof TextDecoder !== 'undefined') { cachedTextDecoder.decode(); };\n\nfunction getStringFromWasm0(ptr, len) {\n    ptr = ptr >>> 0;\n    return cachedTextDecoder.decode(getUint8Memory0().slice(ptr, ptr + len));\n}\n\nfunction addHeapObject(obj) {\n    if (heap_next === heap.length) heap.push(heap.length + 1);\n    const idx = heap_next;\n    heap_next = heap[idx];\n\n    heap[idx] = obj;\n    return idx;\n}\n\nfunction debugString(val) {\n    // primitive types\n    const type = typeof val;\n    if (type == 'number' || type == 'boolean' || val == null) {\n        return  `${val}`;\n    }\n    if (type == 'string') {\n        return `\"${val}\"`;\n    }\n    if (type == 'symbol') {\n        const description = val.description;\n        if (description == null) {\n            return 'Symbol';\n        } else {\n            return `Symbol(${description})`;\n        }\n    }\n    if (type == 'function') {\n        const name = val.name;\n        if (typeof name == 'string' && name.length > 0) {\n            return `Function(${name})`;\n        } else {\n            return 'Function';\n        }\n    }\n    // objects\n    if (Array.isArray(val)) {\n        const length = val.length;\n        let debug = '[';\n        if (length > 0) {\n            debug += debugString(val[0]);\n        }\n        for(let i = 1; i < length; i++) {\n            debug += ', ' + debugString(val[i]);\n        }\n        debug += ']';\n        return debug;\n    }\n    // Test for built-in\n    const builtInMatches = /\\[object ([^\\]]+)\\]/.exec(toString.call(val));\n    let className;\n    if (builtInMatches.length > 1) {\n        className = builtInMatches[1];\n    } else {\n        // Failed to match the standard '[object ClassName]'\n        return toString.call(val);\n    }\n    if (className == 'Object') {\n        // we're a user defined class or Object\n        // JSON.stringify avoids problems with cycles, and is generally much\n        // easier than looping through ownProperties of `val`.\n        try {\n            return 'Object(' + JSON.stringify(val) + ')';\n        } catch (_) {\n            return 'Object';\n        }\n    }\n    // errors\n    if (val instanceof Error) {\n        return `${val.name}: ${val.message}\\n${val.stack}`;\n    }\n    // TODO we could test for more things here, like `Set`s and `Map`s.\n    return className;\n}\n\nconst CLOSURE_DTORS = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(state => {\n    wasm.__wbindgen_export_3.get(state.dtor)(state.a, state.b)\n});\n\nfunction makeMutClosure(arg0, arg1, dtor, f) {\n    const state = { a: arg0, b: arg1, cnt: 1, dtor };\n    const real = (...args) => {\n        // First up with a closure we increment the internal reference\n        // count. This ensures that the Rust closure environment won't\n        // be deallocated while we're invoking it.\n        state.cnt++;\n        const a = state.a;\n        state.a = 0;\n        try {\n            return f(a, state.b, ...args);\n        } finally {\n            if (--state.cnt === 0) {\n                wasm.__wbindgen_export_3.get(state.dtor)(a, state.b);\n                CLOSURE_DTORS.unregister(state);\n            } else {\n                state.a = a;\n            }\n        }\n    };\n    real.original = state;\n    CLOSURE_DTORS.register(real, state, state);\n    return real;\n}\nfunction __wbg_adapter_32(arg0, arg1, arg2) {\n    wasm._dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7349eef91e40c952(arg0, arg1, addHeapObject(arg2));\n}\n\n/**\n*/\nexport function init_panic_hook() {\n    wasm.init_panic_hook();\n}\n\n/**\n*\n* * Get the public parameters file for the folding operation\n* *\n* * @return - the stringified public_params.json file\n*\n* @returns {Promise<string>}\n*/\nexport function get_pp_file() {\n    const ret = wasm.get_pp_file();\n    return takeObject(ret);\n}\n\n/**\n*\n* * Get the spartan proving key file for compression and zk\n* *\n* * @return - the stringified pk.json file\n*\n* @returns {Promise<string>}\n*/\nexport function get_pk_file() {\n    const ret = wasm.get_pk_file();\n    return takeObject(ret);\n}\n\n/**\n*\n* * Get the spartan verification key file for verifying compressed spartan zk proof\n* *\n* * @return - the stringified vk.json file\n*\n* @returns {Promise<string>}\n*/\nexport function get_vk_file() {\n    const ret = wasm.get_vk_file();\n    return takeObject(ret);\n}\n\n/**\n* Verify a proof\n* @param {string} params_string\n* @param {string} proof_string\n* @param {number} num_steps\n* @returns {Promise<Array<any>>}\n*/\nexport function verify_proof(params_string, proof_string, num_steps) {\n    const ptr0 = passStringToWasm0(params_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(proof_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_proof(ptr0, len0, ptr1, len1, addHeapObject(num_steps));\n    return takeObject(ret);\n}\n\n/**\n* Generates a new proof\n* @param {string} r1cs_url\n* @param {string} wasm_url\n* @param {string} params_string\n* @param {string} membership_string\n* @returns {Promise<string>}\n*/\nexport function generate_proof(r1cs_url, wasm_url, params_string, membership_string) {\n    const ptr0 = passStringToWasm0(r1cs_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(wasm_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(params_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ptr3 = passStringToWasm0(membership_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len3 = WASM_VECTOR_LEN;\n    const ret = wasm.generate_proof(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3);\n    return takeObject(ret);\n}\n\n/**\n*\n* * Compute the next step of a proof\n* *\n* * @param params_string - the stringified public parameters file\n* * @param proof_string - the stringified proof file\n* * @param membership_string - the stringified membership inputs\n* * @param zi_primary - the step_out of previous proof and step_in for this proof\n* * @return - the stringified proof file\n*\n* @param {string} r1cs_url\n* @param {string} wasm_url\n* @param {string} params_string\n* @param {string} proof_string\n* @param {string} membership_string\n* @param {Array<any>} zi_primary\n* @returns {Promise<string>}\n*/\nexport function continue_proof(r1cs_url, wasm_url, params_string, proof_string, membership_string, zi_primary) {\n    const ptr0 = passStringToWasm0(r1cs_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(wasm_url, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(params_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ptr3 = passStringToWasm0(proof_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len3 = WASM_VECTOR_LEN;\n    const ptr4 = passStringToWasm0(membership_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len4 = WASM_VECTOR_LEN;\n    const ret = wasm.continue_proof(ptr0, len0, ptr1, len1, ptr2, len2, ptr3, len3, ptr4, len4, addHeapObject(zi_primary));\n    return takeObject(ret);\n}\n\n/**\n* @param {string} params_string\n* @param {string} proving_key_string\n* @param {string} proof_string\n* @returns {Promise<string>}\n*/\nexport function compress_to_spartan(params_string, proving_key_string, proof_string) {\n    const ptr0 = passStringToWasm0(params_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(proving_key_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ptr2 = passStringToWasm0(proof_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len2 = WASM_VECTOR_LEN;\n    const ret = wasm.compress_to_spartan(ptr0, len0, ptr1, len1, ptr2, len2);\n    return takeObject(ret);\n}\n\n/**\n* @param {string} verifier_key_string\n* @param {string} proof_string\n* @param {number} iterations\n* @returns {Promise<Array<any>>}\n*/\nexport function verify_spartan(verifier_key_string, proof_string, iterations) {\n    const ptr0 = passStringToWasm0(verifier_key_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(proof_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.verify_spartan(ptr0, len0, ptr1, len1, addHeapObject(iterations));\n    return takeObject(ret);\n}\n\nlet cachedUint32Memory0 = null;\n\nfunction getUint32Memory0() {\n    if (cachedUint32Memory0 === null || cachedUint32Memory0.buffer !== wasm.memory.buffer) {\n        cachedUint32Memory0 = new Uint32Array(wasm.memory.buffer);\n    }\n    return cachedUint32Memory0;\n}\n\nfunction passArrayJsValueToWasm0(array, malloc) {\n    const ptr = malloc(array.length * 4, 4) >>> 0;\n    const mem = getUint32Memory0();\n    for (let i = 0; i < array.length; i++) {\n        mem[ptr / 4 + i] = addHeapObject(array[i]);\n    }\n    WASM_VECTOR_LEN = array.length;\n    return ptr;\n}\n\nlet stack_pointer = 128;\n\nfunction addBorrowedObject(obj) {\n    if (stack_pointer == 1) throw new Error('out of js stack');\n    heap[--stack_pointer] = obj;\n    return stack_pointer;\n}\n/**\n* Handler for `console.log` invocations.\n*\n* If a test is currently running it takes the `args` array and stringifies\n* it and appends it to the current output of the test. Otherwise it passes\n* the arguments to the original `console.log` function, psased as\n* `original`.\n* @param {Array<any>} args\n*/\nexport function __wbgtest_console_log(args) {\n    try {\n        wasm.__wbgtest_console_log(addBorrowedObject(args));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* Handler for `console.debug` invocations. See above.\n* @param {Array<any>} args\n*/\nexport function __wbgtest_console_debug(args) {\n    try {\n        wasm.__wbgtest_console_debug(addBorrowedObject(args));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* Handler for `console.info` invocations. See above.\n* @param {Array<any>} args\n*/\nexport function __wbgtest_console_info(args) {\n    try {\n        wasm.__wbgtest_console_info(addBorrowedObject(args));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* Handler for `console.warn` invocations. See above.\n* @param {Array<any>} args\n*/\nexport function __wbgtest_console_warn(args) {\n    try {\n        wasm.__wbgtest_console_warn(addBorrowedObject(args));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\n/**\n* Handler for `console.error` invocations. See above.\n* @param {Array<any>} args\n*/\nexport function __wbgtest_console_error(args) {\n    try {\n        wasm.__wbgtest_console_error(addBorrowedObject(args));\n    } finally {\n        heap[stack_pointer++] = undefined;\n    }\n}\n\nfunction __wbg_adapter_64(arg0, arg1) {\n    wasm.wasm_bindgen__convert__closures__invoke0_mut__h8932db997fb4011f(arg0, arg1);\n}\n\nfunction handleError(f, args) {\n    try {\n        return f.apply(this, args);\n    } catch (e) {\n        wasm.__wbindgen_exn_store(addHeapObject(e));\n    }\n}\n/**\n* @param {string} path\n* @returns {Promise<Uint8Array>}\n*/\nexport function read_file(path) {\n    const ptr0 = passStringToWasm0(path, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ret = wasm.read_file(ptr0, len0);\n    return takeObject(ret);\n}\n\n/**\n* @param {string} input_json_string\n* @param {string} wasm_file\n* @returns {Promise<Uint8Array>}\n*/\nexport function generate_witness_browser(input_json_string, wasm_file) {\n    const ptr0 = passStringToWasm0(input_json_string, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len0 = WASM_VECTOR_LEN;\n    const ptr1 = passStringToWasm0(wasm_file, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n    const len1 = WASM_VECTOR_LEN;\n    const ret = wasm.generate_witness_browser(ptr0, len0, ptr1, len1);\n    return takeObject(ret);\n}\n\nfunction __wbg_adapter_155(arg0, arg1, arg2, arg3, arg4) {\n    wasm.wasm_bindgen__convert__closures__invoke3_mut__h2980d311b0172268(arg0, arg1, addHeapObject(arg2), arg3, addHeapObject(arg4));\n}\n\nfunction __wbg_adapter_182(arg0, arg1, arg2, arg3) {\n    wasm.wasm_bindgen__convert__closures__invoke2_mut__h2f24ac3ce8b9065a(arg0, arg1, addHeapObject(arg2), addHeapObject(arg3));\n}\n\n/**\n* @param {number} num_threads\n* @returns {Promise<any>}\n*/\nexport function initThreadPool(num_threads) {\n    const ret = wasm.initThreadPool(num_threads);\n    return takeObject(ret);\n}\n\n/**\n* @param {number} receiver\n*/\nexport function wbg_rayon_start_worker(receiver) {\n    wasm.wbg_rayon_start_worker(receiver);\n}\n\nconst WasmBindgenTestContextFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_wasmbindgentestcontext_free(ptr >>> 0));\n/**\n* Runtime test harness support instantiated in JS.\n*\n* The node.js entry script instantiates a `Context` here which is used to\n* drive test execution.\n*/\nexport class WasmBindgenTestContext {\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        WasmBindgenTestContextFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wasmbindgentestcontext_free(ptr);\n    }\n    /**\n    * Creates a new context ready to run tests.\n    *\n    * A `Context` is the main structure through which test execution is\n    * coordinated, and this will collect output and results for all executed\n    * tests.\n    */\n    constructor() {\n        const ret = wasm.wasmbindgentestcontext_new();\n        this.__wbg_ptr = ret >>> 0;\n        return this;\n    }\n    /**\n    * Inform this context about runtime arguments passed to the test\n    * harness.\n    * @param {any[]} args\n    */\n    args(args) {\n        const ptr0 = passArrayJsValueToWasm0(args, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        wasm.wasmbindgentestcontext_args(this.__wbg_ptr, ptr0, len0);\n    }\n    /**\n    * Executes a list of tests, returning a promise representing their\n    * eventual completion.\n    *\n    * This is the main entry point for executing tests. All the tests passed\n    * in are the JS `Function` object that was plucked off the\n    * `WebAssembly.Instance` exports list.\n    *\n    * The promise returned resolves to either `true` if all tests passed or\n    * `false` if at least one test failed.\n    * @param {any[]} tests\n    * @returns {Promise<any>}\n    */\n    run(tests) {\n        const ptr0 = passArrayJsValueToWasm0(tests, wasm.__wbindgen_malloc);\n        const len0 = WASM_VECTOR_LEN;\n        const ret = wasm.wasmbindgentestcontext_run(this.__wbg_ptr, ptr0, len0);\n        return takeObject(ret);\n    }\n}\n\nconst wbg_rayon_PoolBuilderFinalization = (typeof FinalizationRegistry === 'undefined')\n    ? { register: () => {}, unregister: () => {} }\n    : new FinalizationRegistry(ptr => wasm.__wbg_wbg_rayon_poolbuilder_free(ptr >>> 0));\n/**\n*/\nexport class wbg_rayon_PoolBuilder {\n\n    static __wrap(ptr) {\n        ptr = ptr >>> 0;\n        const obj = Object.create(wbg_rayon_PoolBuilder.prototype);\n        obj.__wbg_ptr = ptr;\n        wbg_rayon_PoolBuilderFinalization.register(obj, obj.__wbg_ptr, obj);\n        return obj;\n    }\n\n    __destroy_into_raw() {\n        const ptr = this.__wbg_ptr;\n        this.__wbg_ptr = 0;\n        wbg_rayon_PoolBuilderFinalization.unregister(this);\n        return ptr;\n    }\n\n    free() {\n        const ptr = this.__destroy_into_raw();\n        wasm.__wbg_wbg_rayon_poolbuilder_free(ptr);\n    }\n    /**\n    * @returns {number}\n    */\n    numThreads() {\n        const ret = wasm.wbg_rayon_poolbuilder_numThreads(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    * @returns {number}\n    */\n    receiver() {\n        const ret = wasm.wbg_rayon_poolbuilder_receiver(this.__wbg_ptr);\n        return ret >>> 0;\n    }\n    /**\n    */\n    build() {\n        wasm.wbg_rayon_poolbuilder_build(this.__wbg_ptr);\n    }\n}\n\nasync function __wbg_load(module, imports) {\n    if (typeof Response === 'function' && module instanceof Response) {\n        if (typeof WebAssembly.instantiateStreaming === 'function') {\n            try {\n                return await WebAssembly.instantiateStreaming(module, imports);\n\n            } catch (e) {\n                if (module.headers.get('Content-Type') != 'application/wasm') {\n                    console.warn(\"`WebAssembly.instantiateStreaming` failed because your server does not serve wasm with `application/wasm` MIME type. Falling back to `WebAssembly.instantiate` which is slower. Original error:\\n\", e);\n\n                } else {\n                    throw e;\n                }\n            }\n        }\n\n        const bytes = await module.arrayBuffer();\n        return await WebAssembly.instantiate(bytes, imports);\n\n    } else {\n        const instance = await WebAssembly.instantiate(module, imports);\n\n        if (instance instanceof WebAssembly.Instance) {\n            return { instance, module };\n\n        } else {\n            return instance;\n        }\n    }\n}\n\nfunction __wbg_get_imports() {\n    const imports = {};\n    imports.wbg = {};\n    imports.wbg.__wbindgen_object_drop_ref = function(arg0) {\n        takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_string_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'string' ? obj : undefined;\n        var ptr1 = isLikeNone(ret) ? 0 : passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        var len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_number_get = function(arg0, arg1) {\n        const obj = getObject(arg1);\n        const ret = typeof(obj) === 'number' ? obj : undefined;\n        getFloat64Memory0()[arg0 / 8 + 1] = isLikeNone(ret) ? 0 : ret;\n        getInt32Memory0()[arg0 / 4 + 0] = !isLikeNone(ret);\n    };\n    imports.wbg.__wbindgen_string_new = function(arg0, arg1) {\n        const ret = getStringFromWasm0(arg0, arg1);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_now_ca4db0732fe747ba = function(arg0) {\n        const ret = getObject(arg0).now();\n        return ret;\n    };\n    imports.wbg.__wbg_log_4db2b3a5fe32a073 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_number_new = function(arg0) {\n        const ret = arg0;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_cb_drop = function(arg0) {\n        const obj = takeObject(arg0).original;\n        if (obj.cnt-- == 1) {\n            obj.a = 0;\n            return true;\n        }\n        const ret = false;\n        return ret;\n    };\n    imports.wbg.__wbg_static_accessor_performance_11eeb10a2a01e97a = function() {\n        const ret = performance;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_object_clone_ref = function(arg0) {\n        const ret = getObject(arg0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_fetch_27eb4c0a08a9ca04 = function(arg0) {\n        const ret = fetch(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_log_2a5709457fad1c18 = function(arg0, arg1) {\n        console.log(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbg_String_7f654bc5beb8a6ba = function(arg0, arg1) {\n        const ret = String(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_getElementById_642ca9087d0ba015 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).getElementById(getStringFromWasm0(arg1, arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_settextcontent_86918b0c20998752 = function(arg0, arg1, arg2) {\n        getObject(arg0).textContent = getStringFromWasm0(arg1, arg2);\n    };\n    imports.wbg.__wbg_wbgtestinvoke_033e629b159d2260 = function() { return handleError(function (arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = () => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_64(a, state0.b, );\n                } finally {\n                    state0.a = a;\n                }\n            };\n            __wbg_test_invoke(cb0);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    }, arguments) };\n    imports.wbg.__wbg_static_accessor_document_12cabad9f461ef50 = function() {\n        const ret = document;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_textcontent_a8d17ab03d4e4103 = function(arg0, arg1) {\n        const ret = getObject(arg1).textContent;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_stack_6c88eb77b2d25b5b = function(arg0) {\n        const ret = getObject(arg0).stack;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_d65c999b9952db3d = function(arg0) {\n        const ret = getObject(arg0).self;\n        return isLikeNone(ret) ? 0 : addHeapObject(ret);\n    };\n    imports.wbg.__wbg_constructor_81a268f98d193d8c = function(arg0) {\n        const ret = getObject(arg0).constructor;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_name_78f75ebef39cbdd8 = function(arg0, arg1) {\n        const ret = getObject(arg1).name;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_stack_23fbdaf18c60859b = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_wbgtestoutputwriteln_f40fe3ffa10d4424 = function(arg0) {\n        __wbg_test_output_writeln(takeObject(arg0));\n    };\n    imports.wbg.__wbg_stack_c8eb9f112db2c3eb = function(arg0) {\n        const ret = getObject(arg0).stack;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_abda76e883ba8a5f = function() {\n        const ret = new Error();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_stack_658279fe44541cf6 = function(arg0, arg1) {\n        const ret = getObject(arg1).stack;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_error_f851667af71bcfc6 = function(arg0, arg1) {\n        let deferred0_0;\n        let deferred0_1;\n        try {\n            deferred0_0 = arg0;\n            deferred0_1 = arg1;\n            console.error(getStringFromWasm0(arg0, arg1));\n        } finally {\n            wasm.__wbindgen_free(deferred0_0, deferred0_1, 1);\n        }\n    };\n    imports.wbg.__wbg_generatewitnessbrowserasync_b382537b674d8915 = function(arg0, arg1, arg2, arg3) {\n        const ret = generate_witness_browser_async(getStringFromWasm0(arg0, arg1), getStringFromWasm0(arg2, arg3));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_readfileasync_631b508da962cc69 = function(arg0, arg1) {\n        const ret = read_file_async(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_link_c83fa9fa3333cb90 = function(arg0) {\n        const ret = \"data:application/javascript,\" + encodeURIComponent(`onmessage = function (ev) {\n            let [ia, index, value] = ev.data;\n            ia = new Int32Array(ia.buffer);\n            let result = Atomics.wait(ia, index, value);\n            postMessage(result);\n        };\n        `);\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_waitAsync_92219692955aa445 = function() {\n        const ret = Atomics.waitAsync;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_undefined = function(arg0) {\n        const ret = getObject(arg0) === undefined;\n        return ret;\n    };\n    imports.wbg.__wbg_waitAsync_ecc6bb0101f0b119 = function(arg0, arg1, arg2) {\n        const ret = Atomics.waitAsync(getObject(arg0), arg1, arg2);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_async_d412da4fadd37b75 = function(arg0) {\n        const ret = getObject(arg0).async;\n        return ret;\n    };\n    imports.wbg.__wbg_value_ceb95bfbc794ce19 = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_queueMicrotask_f61ee94ee663068b = function(arg0) {\n        queueMicrotask(getObject(arg0));\n    };\n    imports.wbg.__wbg_queueMicrotask_f82fc5d1e8f816ae = function(arg0) {\n        const ret = getObject(arg0).queueMicrotask;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_function = function(arg0) {\n        const ret = typeof(getObject(arg0)) === 'function';\n        return ret;\n    };\n    imports.wbg.__wbg_fetch_10edd7d7da150227 = function(arg0, arg1) {\n        const ret = getObject(arg0).fetch(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_instanceof_Window_cee7a886d55e7df5 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Window;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_data_bbdd2d77ab2f7e78 = function(arg0) {\n        const ret = getObject(arg0).data;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithstrandinit_11fbc38beb4c26b0 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = new Request(getStringFromWasm0(arg0, arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_instanceof_Response_b5451a06784a2404 = function(arg0) {\n        let result;\n        try {\n            result = getObject(arg0) instanceof Response;\n        } catch (_) {\n            result = false;\n        }\n        const ret = result;\n        return ret;\n    };\n    imports.wbg.__wbg_url_e319aee56d26ddf1 = function(arg0, arg1) {\n        const ret = getObject(arg1).url;\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbg_status_bea567d1049f0b6a = function(arg0) {\n        const ret = getObject(arg0).status;\n        return ret;\n    };\n    imports.wbg.__wbg_headers_96d9457941f08a33 = function(arg0) {\n        const ret = getObject(arg0).headers;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_arrayBuffer_eb2005809be09726 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).arrayBuffer();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_text_24a1c9b21feed3de = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).text();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_signal_8fbb4942ce477464 = function(arg0) {\n        const ret = getObject(arg0).signal;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_92cc7d259297256c = function() { return handleError(function () {\n        const ret = new AbortController();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_abort_510372063dd66b29 = function(arg0) {\n        getObject(arg0).abort();\n    };\n    imports.wbg.__wbg_new_4db22fd5d40c5665 = function() { return handleError(function () {\n        const ret = new Headers();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_append_b2e8ed692fc5eb6e = function() { return handleError(function (arg0, arg1, arg2, arg3, arg4) {\n        getObject(arg0).append(getStringFromWasm0(arg1, arg2), getStringFromWasm0(arg3, arg4));\n    }, arguments) };\n    imports.wbg.__wbg_setonmessage_69d6948a76937c04 = function(arg0, arg1) {\n        getObject(arg0).onmessage = getObject(arg1);\n    };\n    imports.wbg.__wbg_new_cc1b6504e92f2e3c = function() { return handleError(function (arg0, arg1) {\n        const ret = new Worker(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_postMessage_64df7b91855fc1fb = function() { return handleError(function (arg0, arg1) {\n        getObject(arg0).postMessage(getObject(arg1));\n    }, arguments) };\n    imports.wbg.__wbg_get_0ee8ea3c7c984c45 = function(arg0, arg1) {\n        const ret = getObject(arg0)[arg1 >>> 0];\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newnoargs_cfecb3965268594c = function(arg0, arg1) {\n        const ret = new Function(getStringFromWasm0(arg0, arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_is_object = function(arg0) {\n        const val = getObject(arg0);\n        const ret = typeof(val) === 'object' && val !== null;\n        return ret;\n    };\n    imports.wbg.__wbg_next_586204376d2ed373 = function(arg0) {\n        const ret = getObject(arg0).next;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_next_b2d3366343a208b3 = function() { return handleError(function (arg0) {\n        const ret = getObject(arg0).next();\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_done_90b14d6f6eacc42f = function(arg0) {\n        const ret = getObject(arg0).done;\n        return ret;\n    };\n    imports.wbg.__wbg_value_3158be908c80a75e = function(arg0) {\n        const ret = getObject(arg0).value;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_iterator_40027cdd598da26b = function() {\n        const ret = Symbol.iterator;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_get_3fddfed2c83f434c = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.get(getObject(arg0), getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_call_3f093dd26d5569f8 = function() { return handleError(function (arg0, arg1) {\n        const ret = getObject(arg0).call(getObject(arg1));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_632630b5cec17f21 = function() {\n        const ret = new Object();\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_self_05040bd9523805b9 = function() { return handleError(function () {\n        const ret = self.self;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_window_adc720039f2cb14f = function() { return handleError(function () {\n        const ret = window.window;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_globalThis_622105db80c1457d = function() { return handleError(function () {\n        const ret = globalThis.globalThis;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_global_f56b013ed9bcf359 = function() { return handleError(function () {\n        const ret = global.global;\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_newwithlength_a20dc3b27e1cb1b2 = function(arg0) {\n        const ret = new Array(arg0 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_79c308ecd9a1d091 = function(arg0, arg1, arg2) {\n        getObject(arg0)[arg1 >>> 0] = takeObject(arg2);\n    };\n    imports.wbg.__wbg_forEach_110b7f39368dd5d8 = function(arg0, arg1, arg2) {\n        try {\n            var state0 = {a: arg1, b: arg2};\n            var cb0 = (arg0, arg1, arg2) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_155(a, state0.b, arg0, arg1, arg2);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            getObject(arg0).forEach(cb0);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_of_94ac9e20a3c46ec5 = function(arg0, arg1, arg2) {\n        const ret = Array.of(getObject(arg0), getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_message_2a19bb5b62cf8e22 = function(arg0) {\n        const ret = getObject(arg0).message;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_name_405bb0aa047a1bf5 = function(arg0) {\n        const ret = getObject(arg0).name;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_call_67f2111acd2dfdb6 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = getObject(arg0).call(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbg_new_70828a4353259d4b = function(arg0, arg1) {\n        try {\n            var state0 = {a: arg0, b: arg1};\n            var cb0 = (arg0, arg1) => {\n                const a = state0.a;\n                state0.a = 0;\n                try {\n                    return __wbg_adapter_182(a, state0.b, arg0, arg1);\n                } finally {\n                    state0.a = a;\n                }\n            };\n            const ret = new Promise(cb0);\n            return addHeapObject(ret);\n        } finally {\n            state0.a = state0.b = 0;\n        }\n    };\n    imports.wbg.__wbg_resolve_5da6faf2c96fd1d5 = function(arg0) {\n        const ret = Promise.resolve(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_f9e58f5a50f43eae = function(arg0, arg1) {\n        const ret = getObject(arg0).then(getObject(arg1));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_then_20a5920e447d1cb1 = function(arg0, arg1, arg2) {\n        const ret = getObject(arg0).then(getObject(arg1), getObject(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_buffer_b914fb8b50ebbc3e = function(arg0) {\n        const ret = getObject(arg0).buffer;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_e4dd61c29af24331 = function(arg0) {\n        const ret = new Int32Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_newwithbyteoffsetandlength_0de9ee56e9f6ee6e = function(arg0, arg1, arg2) {\n        const ret = new Uint8Array(getObject(arg0), arg1 >>> 0, arg2 >>> 0);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_new_b1f2d6842d615181 = function(arg0) {\n        const ret = new Uint8Array(getObject(arg0));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_set_7d988c98e6ced92d = function(arg0, arg1, arg2) {\n        getObject(arg0).set(getObject(arg1), arg2 >>> 0);\n    };\n    imports.wbg.__wbg_length_21c4b0ae73cba59d = function(arg0) {\n        const ret = getObject(arg0).length;\n        return ret;\n    };\n    imports.wbg.__wbg_has_ad45eb020184f624 = function() { return handleError(function (arg0, arg1) {\n        const ret = Reflect.has(getObject(arg0), getObject(arg1));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_set_961700853a212a39 = function() { return handleError(function (arg0, arg1, arg2) {\n        const ret = Reflect.set(getObject(arg0), getObject(arg1), getObject(arg2));\n        return ret;\n    }, arguments) };\n    imports.wbg.__wbg_stringify_865daa6fb8c83d5a = function() { return handleError(function (arg0) {\n        const ret = JSON.stringify(getObject(arg0));\n        return addHeapObject(ret);\n    }, arguments) };\n    imports.wbg.__wbindgen_debug_string = function(arg0, arg1) {\n        const ret = debugString(getObject(arg1));\n        const ptr1 = passStringToWasm0(ret, wasm.__wbindgen_malloc, wasm.__wbindgen_realloc);\n        const len1 = WASM_VECTOR_LEN;\n        getInt32Memory0()[arg0 / 4 + 1] = len1;\n        getInt32Memory0()[arg0 / 4 + 0] = ptr1;\n    };\n    imports.wbg.__wbindgen_throw = function(arg0, arg1) {\n        throw new Error(getStringFromWasm0(arg0, arg1));\n    };\n    imports.wbg.__wbindgen_rethrow = function(arg0) {\n        throw takeObject(arg0);\n    };\n    imports.wbg.__wbindgen_module = function() {\n        const ret = __wbg_init.__wbindgen_wasm_module;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_memory = function() {\n        const ret = wasm.memory;\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbg_startWorkers_2ee336a9694dda13 = function(arg0, arg1, arg2) {\n        const ret = startWorkers(takeObject(arg0), takeObject(arg1), wbg_rayon_PoolBuilder.__wrap(arg2));\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper2806 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 702, __wbg_adapter_32);\n        return addHeapObject(ret);\n    };\n    imports.wbg.__wbindgen_closure_wrapper2807 = function(arg0, arg1, arg2) {\n        const ret = makeMutClosure(arg0, arg1, 702, __wbg_adapter_32);\n        return addHeapObject(ret);\n    };\n\n    return imports;\n}\n\nfunction __wbg_init_memory(imports, maybe_memory) {\n    imports.wbg.memory = maybe_memory || new WebAssembly.Memory({initial:22,maximum:65536,shared:true});\n}\n\nfunction __wbg_finalize_init(instance, module) {\n    wasm = instance.exports;\n    __wbg_init.__wbindgen_wasm_module = module;\n    cachedFloat64Memory0 = null;\n    cachedInt32Memory0 = null;\n    cachedUint32Memory0 = null;\n    cachedUint8Memory0 = null;\n\n    wasm.__wbindgen_start();\n    return wasm;\n}\n\nfunction initSync(module, maybe_memory) {\n    if (wasm !== undefined) return wasm;\n\n    const imports = __wbg_get_imports();\n\n    __wbg_init_memory(imports, maybe_memory);\n\n    if (!(module instanceof WebAssembly.Module)) {\n        module = new WebAssembly.Module(module);\n    }\n\n    const instance = new WebAssembly.Instance(module, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nasync function __wbg_init(input, maybe_memory) {\n    if (wasm !== undefined) return wasm;\n\n    if (typeof input === 'undefined') {\n        input = new URL('babyjubjub_ecdsa_nova_bg.wasm', import.meta.url);\n    }\n    const imports = __wbg_get_imports();\n\n    if (typeof input === 'string' || (typeof Request === 'function' && input instanceof Request) || (typeof URL === 'function' && input instanceof URL)) {\n        input = fetch(input);\n    }\n\n    __wbg_init_memory(imports, maybe_memory);\n\n    const { instance, module } = await __wbg_load(await input, imports);\n\n    return __wbg_finalize_init(instance, module);\n}\n\nexport { initSync }\nexport default __wbg_init;\n","// TODO: can these reads be cached?\nexport async function read_file_async(path) {\n  const response = await fetch(path);\n  const bytes = await response.arrayBuffer();\n  const res = new Uint8Array(bytes);\n  return res;\n}\n\nexport async function generate_witness_browser_async(\n  input_json_string,\n  wasm_file\n) {\n  const input = JSON.parse(input_json_string);\n  const buffer = await read_file_async(wasm_file);\n  const witnessCalculator = await wc(buffer);\n  const buff = await witnessCalculator.calculateWTNSBin(input, 0);\n  return buff;\n}\n\n// It gives me great pain to do this, but witness_calculator.js needs to be copied here\n// so wasm-pack would pick it up :(\nconst wc = async function builder(code, options) {\n  options = options || {};\n\n  let wasmModule;\n  try {\n    wasmModule = await WebAssembly.compile(code);\n  } catch (err) {\n    console.log(err);\n    console.log(\n      \"\\nTry to run circom --c in order to generate c++ code instead\\n\"\n    );\n    throw new Error(err);\n  }\n\n  let wc;\n\n  let errStr = \"\";\n  let msgStr = \"\";\n\n  const instance = await WebAssembly.instantiate(wasmModule, {\n    runtime: {\n      exceptionHandler: function (code) {\n        let err;\n        if (code == 1) {\n          err = \"Signal not found.\\n\";\n        } else if (code == 2) {\n          err = \"Too many signals set.\\n\";\n        } else if (code == 3) {\n          err = \"Signal already set.\\n\";\n        } else if (code == 4) {\n          err = \"Assert Failed.\\n\";\n        } else if (code == 5) {\n          err = \"Not enough memory.\\n\";\n        } else if (code == 6) {\n          err = \"Input signal array access exceeds the size.\\n\";\n        } else {\n          err = \"Unknown error.\\n\";\n        }\n        throw new Error(err + errStr);\n      },\n      printErrorMessage: function () {\n        errStr += getMessage() + \"\\n\";\n        // console.error(getMessage());\n      },\n      writeBufferMessage: function () {\n        const msg = getMessage();\n        // Any calls to `log()` will always end with a `\\n`, so that's when we print and reset\n        if (msg === \"\\n\") {\n          console.log(msgStr);\n          msgStr = \"\";\n        } else {\n          // If we've buffered other content, put a space in between the items\n          if (msgStr !== \"\") {\n            msgStr += \" \";\n          }\n          // Then append the message to the message we are creating\n          msgStr += msg;\n        }\n      },\n      showSharedRWMemory: function () {\n        printSharedRWMemory();\n      },\n    },\n  });\n\n  const sanityCheck = options;\n  //        options &&\n  //        (\n  //            options.sanityCheck ||\n  //            options.logGetSignal ||\n  //            options.logSetSignal ||\n  //            options.logStartComponent ||\n  //            options.logFinishComponent\n  //        );\n\n  wc = new WitnessCalculator(instance, sanityCheck);\n  return wc;\n\n  function getMessage() {\n    var message = \"\";\n    var c = instance.exports.getMessageChar();\n    while (c != 0) {\n      message += String.fromCharCode(c);\n      c = instance.exports.getMessageChar();\n    }\n    return message;\n  }\n\n  function printSharedRWMemory() {\n    const shared_rw_memory_size = instance.exports.getFieldNumLen32();\n    const arr = new Uint32Array(shared_rw_memory_size);\n    for (let j = 0; j < shared_rw_memory_size; j++) {\n      arr[shared_rw_memory_size - 1 - j] =\n        instance.exports.readSharedRWMemory(j);\n    }\n\n    // If we've buffered other content, put a space in between the items\n    if (msgStr !== \"\") {\n      msgStr += \" \";\n    }\n    // Then append the value to the message we are creating\n    msgStr += fromArray32(arr).toString();\n  }\n};\n\nclass WitnessCalculator {\n  constructor(instance, sanityCheck) {\n    this.instance = instance;\n\n    this.version = this.instance.exports.getVersion();\n    this.n32 = this.instance.exports.getFieldNumLen32();\n\n    this.instance.exports.getRawPrime();\n    const arr = new Uint32Array(this.n32);\n    for (let i = 0; i < this.n32; i++) {\n      arr[this.n32 - 1 - i] = this.instance.exports.readSharedRWMemory(i);\n    }\n    this.prime = fromArray32(arr);\n\n    this.witnessSize = this.instance.exports.getWitnessSize();\n\n    this.sanityCheck = sanityCheck;\n  }\n\n  circom_version() {\n    return this.instance.exports.getVersion();\n  }\n\n  async _doCalculateWitness(input, sanityCheck) {\n    //input is assumed to be a map from signals to arrays of bigints\n    this.instance.exports.init(this.sanityCheck || sanityCheck ? 1 : 0);\n    const keys = Object.keys(input);\n    var input_counter = 0;\n    keys.forEach((k) => {\n      const h = fnvHash(k);\n      const hMSB = parseInt(h.slice(0, 8), 16);\n      const hLSB = parseInt(h.slice(8, 16), 16);\n      const fArr = flatArray(input[k]);\n      let signalSize = this.instance.exports.getInputSignalSize(hMSB, hLSB);\n      if (signalSize < 0) {\n        throw new Error(`Signal ${k} not found\\n`);\n      }\n      if (fArr.length < signalSize) {\n        throw new Error(`Not enough values for input signal ${k}\\n`);\n      }\n      if (fArr.length > signalSize) {\n        throw new Error(`Too many values for input signal ${k}\\n`);\n      }\n      for (let i = 0; i < fArr.length; i++) {\n        const arrFr = toArray32(normalize(fArr[i], this.prime), this.n32);\n        for (let j = 0; j < this.n32; j++) {\n          this.instance.exports.writeSharedRWMemory(j, arrFr[this.n32 - 1 - j]);\n        }\n        try {\n          this.instance.exports.setInputSignal(hMSB, hLSB, i);\n          input_counter++;\n        } catch (err) {\n          // console.log(`After adding signal ${i} of ${k}`)\n          throw new Error(err);\n        }\n      }\n    });\n    if (input_counter < this.instance.exports.getInputSize()) {\n      throw new Error(\n        `Not all inputs have been set. Only ${input_counter} out of ${this.instance.exports.getInputSize()}`\n      );\n    }\n  }\n\n  async calculateWitness(input, sanityCheck) {\n    const w = [];\n\n    await this._doCalculateWitness(input, sanityCheck);\n\n    for (let i = 0; i < this.witnessSize; i++) {\n      this.instance.exports.getWitness(i);\n      const arr = new Uint32Array(this.n32);\n      for (let j = 0; j < this.n32; j++) {\n        arr[this.n32 - 1 - j] = this.instance.exports.readSharedRWMemory(j);\n      }\n      w.push(fromArray32(arr));\n    }\n\n    return w;\n  }\n\n  async calculateBinWitness(input, sanityCheck) {\n    const buff32 = new Uint32Array(this.witnessSize * this.n32);\n    const buff = new Uint8Array(buff32.buffer);\n    await this._doCalculateWitness(input, sanityCheck);\n\n    for (let i = 0; i < this.witnessSize; i++) {\n      this.instance.exports.getWitness(i);\n      const pos = i * this.n32;\n      for (let j = 0; j < this.n32; j++) {\n        buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n      }\n    }\n\n    return buff;\n  }\n\n  async calculateWTNSBin(input, sanityCheck) {\n    const buff32 = new Uint32Array(this.witnessSize * this.n32 + this.n32 + 11);\n    const buff = new Uint8Array(buff32.buffer);\n    await this._doCalculateWitness(input, sanityCheck);\n\n    //\"wtns\"\n    buff[0] = \"w\".charCodeAt(0);\n    buff[1] = \"t\".charCodeAt(0);\n    buff[2] = \"n\".charCodeAt(0);\n    buff[3] = \"s\".charCodeAt(0);\n\n    //version 2\n    buff32[1] = 2;\n\n    //number of sections: 2\n    buff32[2] = 2;\n\n    //id section 1\n    buff32[3] = 1;\n\n    const n8 = this.n32 * 4;\n    //id section 1 length in 64bytes\n    const idSection1length = 8 + n8;\n    const idSection1lengthHex = idSection1length.toString(16);\n    buff32[4] = parseInt(idSection1lengthHex.slice(0, 8), 16);\n    buff32[5] = parseInt(idSection1lengthHex.slice(8, 16), 16);\n\n    //this.n32\n    buff32[6] = n8;\n\n    //prime number\n    this.instance.exports.getRawPrime();\n\n    var pos = 7;\n    for (let j = 0; j < this.n32; j++) {\n      buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n    }\n    pos += this.n32;\n\n    // witness size\n    buff32[pos] = this.witnessSize;\n    pos++;\n\n    //id section 2\n    buff32[pos] = 2;\n    pos++;\n\n    // section 2 length\n    const idSection2length = n8 * this.witnessSize;\n    const idSection2lengthHex = idSection2length.toString(16);\n    buff32[pos] = parseInt(idSection2lengthHex.slice(0, 8), 16);\n    buff32[pos + 1] = parseInt(idSection2lengthHex.slice(8, 16), 16);\n\n    pos += 2;\n    for (let i = 0; i < this.witnessSize; i++) {\n      this.instance.exports.getWitness(i);\n      for (let j = 0; j < this.n32; j++) {\n        buff32[pos + j] = this.instance.exports.readSharedRWMemory(j);\n      }\n      pos += this.n32;\n    }\n\n    return buff;\n  }\n}\n\nfunction toArray32(rem, size) {\n  const res = []; //new Uint32Array(size); //has no unshift\n  const radix = BigInt(0x100000000);\n  while (rem) {\n    res.unshift(Number(rem % radix));\n    rem = rem / radix;\n  }\n  if (size) {\n    var i = size - res.length;\n    while (i > 0) {\n      res.unshift(0);\n      i--;\n    }\n  }\n  return res;\n}\n\nfunction fromArray32(arr) {\n  //returns a BigInt\n  var res = BigInt(0);\n  const radix = BigInt(0x100000000);\n  for (let i = 0; i < arr.length; i++) {\n    res = res * radix + BigInt(arr[i]);\n  }\n  return res;\n}\n\nfunction flatArray(a) {\n  var res = [];\n  fillArray(res, a);\n  return res;\n\n  function fillArray(res, a) {\n    if (Array.isArray(a)) {\n      for (let i = 0; i < a.length; i++) {\n        fillArray(res, a[i]);\n      }\n    } else {\n      res.push(a);\n    }\n  }\n}\n\nfunction normalize(n, prime) {\n  let res = BigInt(n) % prime;\n  if (res < 0) res += prime;\n  return res;\n}\n\nfunction fnvHash(str) {\n  const uint64_max = BigInt(2) ** BigInt(64);\n  let hash = BigInt(\"0xCBF29CE484222325\");\n  for (var i = 0; i < str.length; i++) {\n    hash ^= BigInt(str[i].charCodeAt());\n    hash *= BigInt(0x100000001b3);\n    hash %= uint64_max;\n  }\n  let shash = hash.toString(16);\n  let n = 16 - shash.length;\n  shash = \"0\".repeat(n).concat(shash);\n  return shash;\n}\n","/*\r\n * Copyright 2022 Google Inc. All Rights Reserved.\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n// Note: this is never used, but necessary to prevent a bug in Firefox\r\n// (https://bugzilla.mozilla.org/show_bug.cgi?id=1702191) where it collects\r\n// Web Workers that have a shared WebAssembly memory with the main thread,\r\n// but are not explicitly rooted via a `Worker` instance.\r\n//\r\n// By storing them in a variable, we can keep `Worker` objects around and\r\n// prevent them from getting GC-d.\r\nlet _workers;\r\n\r\nexport async function startWorkers(module, memory, builder) {\r\n  if (builder.numThreads() === 0) {\r\n    throw new Error(`num_threads must be > 0.`);\r\n  }\r\n\r\n  const workerInit = {\r\n    module,\r\n    memory,\r\n    receiver: builder.receiver()\r\n  };\r\n\r\n  _workers = await Promise.all(\r\n    Array.from({ length: builder.numThreads() }, async () => {\r\n      // Self-spawn into a new Worker.\r\n      //\r\n      // TODO: while `new URL('...', import.meta.url) becomes a semi-standard\r\n      // way to get asset URLs relative to the module across various bundlers\r\n      // and browser, ideally we should switch to `import.meta.resolve`\r\n      // once it becomes a standard.\r\n      const worker = new Worker(\r\n        new URL('./workerHelpers.worker.js', import.meta.url),\r\n        {\r\n          type: 'module'\r\n        }\r\n      );\r\n      worker.postMessage(workerInit);\r\n      await new Promise(resolve =>\r\n        worker.addEventListener('message', resolve, { once: true })\r\n      );\r\n      return worker;\r\n    })\r\n  );\r\n  builder.build();\r\n}\r\n"],"names":["wasm","heap","Array","fill","undefined","getObject","idx","push","heap_next","length","takeObject","ret","dropObject","WASM_VECTOR_LEN","cachedUint8Memory0","getUint8Memory0","buffer","memory","Uint8Array","cachedTextEncoder","TextEncoder","encode","Error","encodeString","arg","view","buf","set","read","written","passStringToWasm0","malloc","realloc","ptr","subarray","len","mem","offset","code","charCodeAt","slice","isLikeNone","x","cachedInt32Memory0","getInt32Memory0","Int32Array","cachedFloat64Memory0","cachedTextDecoder","TextDecoder","ignoreBOM","fatal","decode","getStringFromWasm0","addHeapObject","obj","debugString","val","type","concat","description","name","isArray","debug","i","builtInMatches","exec","toString","call","className","JSON","stringify","_","message","stack","CLOSURE_DTORS","FinalizationRegistry","register","unregister","state","__wbindgen_export_3","get","dtor","a","b","makeMutClosure","arg0","arg1","f","cnt","real","_len","arguments","args","_key","original","__wbg_adapter_32","arg2","_dyn_core__ops__function__FnMut__A____Output___R_as_wasm_bindgen__closure__WasmClosure___describe__invoke__h7349eef91e40c952","init_panic_hook","get_pp_file","get_pk_file","get_vk_file","verify_proof","params_string","proof_string","num_steps","ptr0","__wbindgen_malloc","__wbindgen_realloc","len0","ptr1","len1","generate_proof","r1cs_url","wasm_url","membership_string","ptr2","len2","ptr3","len3","continue_proof","zi_primary","ptr4","len4","compress_to_spartan","proving_key_string","verify_spartan","verifier_key_string","iterations","cachedUint32Memory0","passArrayJsValueToWasm0","array","Uint32Array","stack_pointer","addBorrowedObject","__wbgtest_console_log","__wbgtest_console_debug","__wbgtest_console_info","__wbgtest_console_warn","__wbgtest_console_error","handleError","apply","this","e","__wbindgen_exn_store","read_file","path","generate_witness_browser","input_json_string","wasm_file","initThreadPool","num_threads","wbg_rayon_start_worker","receiver","WasmBindgenTestContextFinalization","__wbg_wasmbindgentestcontext_free","WasmBindgenTestContext","__destroy_into_raw","__wbg_ptr","free","constructor","wasmbindgentestcontext_new","wasmbindgentestcontext_args","run","tests","wasmbindgentestcontext_run","wbg_rayon_PoolBuilderFinalization","__wbg_wbg_rayon_poolbuilder_free","wbg_rayon_PoolBuilder","__wrap","Object","create","prototype","numThreads","wbg_rayon_poolbuilder_numThreads","wbg_rayon_poolbuilder_receiver","build","wbg_rayon_poolbuilder_build","__wbg_get_imports","imports","wbg","__wbindgen_object_drop_ref","__wbindgen_string_get","__wbindgen_number_get","Float64Array","__wbindgen_string_new","__wbg_now_ca4db0732fe747ba","now","__wbg_log_4db2b3a5fe32a073","console","log","__wbindgen_number_new","__wbindgen_cb_drop","__wbg_static_accessor_performance_11eeb10a2a01e97a","performance","__wbindgen_object_clone_ref","__wbg_fetch_27eb4c0a08a9ca04","fetch","__wbg_log_2a5709457fad1c18","__wbg_String_7f654bc5beb8a6ba","String","__wbg_getElementById_642ca9087d0ba015","getElementById","__wbg_settextcontent_86918b0c20998752","textContent","__wbg_wbgtestinvoke_033e629b159d2260","state0","__wbg_test_invoke","cb0","wasm_bindgen__convert__closures__invoke0_mut__h8932db997fb4011f","__wbg_adapter_64","__wbg_static_accessor_document_12cabad9f461ef50","document","__wbg_textcontent_a8d17ab03d4e4103","__wbg_stack_6c88eb77b2d25b5b","__wbg_self_d65c999b9952db3d","self","__wbg_constructor_81a268f98d193d8c","__wbg_name_78f75ebef39cbdd8","__wbg_stack_23fbdaf18c60859b","__wbg_wbgtestoutputwriteln_f40fe3ffa10d4424","__wbg_test_output_writeln","__wbg_stack_c8eb9f112db2c3eb","__wbg_new_abda76e883ba8a5f","__wbg_stack_658279fe44541cf6","__wbg_error_f851667af71bcfc6","deferred0_0","deferred0_1","error","__wbindgen_free","__wbg_generatewitnessbrowserasync_b382537b674d8915","arg3","generate_witness_browser_async","__wbg_readfileasync_631b508da962cc69","read_file_async","__wbindgen_link_c83fa9fa3333cb90","encodeURIComponent","__wbg_waitAsync_92219692955aa445","Atomics","waitAsync","__wbindgen_is_undefined","__wbg_waitAsync_ecc6bb0101f0b119","__wbg_async_d412da4fadd37b75","async","__wbg_value_ceb95bfbc794ce19","value","__wbg_queueMicrotask_f61ee94ee663068b","queueMicrotask","__wbg_queueMicrotask_f82fc5d1e8f816ae","__wbindgen_is_function","__wbg_fetch_10edd7d7da150227","__wbg_instanceof_Window_cee7a886d55e7df5","result","Window","__wbg_data_bbdd2d77ab2f7e78","data","__wbg_newwithstrandinit_11fbc38beb4c26b0","Request","__wbg_instanceof_Response_b5451a06784a2404","Response","__wbg_url_e319aee56d26ddf1","url","__wbg_status_bea567d1049f0b6a","status","__wbg_headers_96d9457941f08a33","headers","__wbg_arrayBuffer_eb2005809be09726","arrayBuffer","__wbg_text_24a1c9b21feed3de","text","__wbg_signal_8fbb4942ce477464","signal","__wbg_new_92cc7d259297256c","AbortController","__wbg_abort_510372063dd66b29","abort","__wbg_new_4db22fd5d40c5665","Headers","__wbg_append_b2e8ed692fc5eb6e","arg4","append","__wbg_setonmessage_69d6948a76937c04","onmessage","__wbg_new_cc1b6504e92f2e3c","Worker","__wbg_postMessage_64df7b91855fc1fb","postMessage","__wbg_get_0ee8ea3c7c984c45","__wbg_newnoargs_cfecb3965268594c","Function","__wbindgen_is_object","__wbg_next_586204376d2ed373","next","__wbg_next_b2d3366343a208b3","__wbg_done_90b14d6f6eacc42f","done","__wbg_value_3158be908c80a75e","__wbg_iterator_40027cdd598da26b","Symbol","iterator","__wbg_get_3fddfed2c83f434c","Reflect","__wbg_call_3f093dd26d5569f8","__wbg_new_632630b5cec17f21","__wbg_self_05040bd9523805b9","__wbg_window_adc720039f2cb14f","window","__wbg_globalThis_622105db80c1457d","globalThis","__wbg_global_f56b013ed9bcf359","global","__wbg_newwithlength_a20dc3b27e1cb1b2","__wbg_set_79c308ecd9a1d091","__wbg_forEach_110b7f39368dd5d8","forEach","wasm_bindgen__convert__closures__invoke3_mut__h2980d311b0172268","__wbg_adapter_155","__wbg_of_94ac9e20a3c46ec5","of","__wbg_message_2a19bb5b62cf8e22","__wbg_name_405bb0aa047a1bf5","__wbg_call_67f2111acd2dfdb6","__wbg_new_70828a4353259d4b","Promise","wasm_bindgen__convert__closures__invoke2_mut__h2f24ac3ce8b9065a","__wbg_adapter_182","__wbg_resolve_5da6faf2c96fd1d5","resolve","__wbg_then_f9e58f5a50f43eae","then","__wbg_then_20a5920e447d1cb1","__wbg_buffer_b914fb8b50ebbc3e","__wbg_new_e4dd61c29af24331","__wbg_newwithbyteoffsetandlength_0de9ee56e9f6ee6e","__wbg_new_b1f2d6842d615181","__wbg_set_7d988c98e6ced92d","__wbg_length_21c4b0ae73cba59d","__wbg_has_ad45eb020184f624","has","__wbg_set_961700853a212a39","__wbg_stringify_865daa6fb8c83d5a","__wbindgen_debug_string","__wbindgen_throw","__wbindgen_rethrow","__wbindgen_module","__wbg_init","__wbindgen_wasm_module","__wbindgen_memory","__wbg_startWorkers_2ee336a9694dda13","startWorkers","__wbindgen_closure_wrapper2806","__wbindgen_closure_wrapper2807","__wbg_init_memory","maybe_memory","WebAssembly","Memory","initial","maximum","shared","__wbg_finalize_init","instance","module","exports","__wbindgen_start","initSync","Module","Instance","input","URL","instantiateStreaming","warn","bytes","instantiate","__wbg_load","response","parse","witnessCalculator","wc","calculateWTNSBin","options","wasmModule","compile","err","errStr","msgStr","runtime","exceptionHandler","printErrorMessage","getMessage","writeBufferMessage","msg","showSharedRWMemory","shared_rw_memory_size","getFieldNumLen32","arr","j","readSharedRWMemory","fromArray32","printSharedRWMemory","WitnessCalculator","c","getMessageChar","fromCharCode","sanityCheck","version","getVersion","n32","getRawPrime","prime","witnessSize","getWitnessSize","circom_version","_doCalculateWitness","init","keys","input_counter","k","h","str","uint64_max","BigInt","hash","shash","n","repeat","fnvHash","hMSB","parseInt","hLSB","fArr","res","fillArray","flatArray","signalSize","getInputSignalSize","arrFr","toArray32","normalize","writeSharedRWMemory","setInputSignal","getInputSize","calculateWitness","w","getWitness","calculateBinWitness","buff32","buff","pos","n8","idSection1lengthHex","idSection2lengthHex","rem","size","radix","unshift","Number","_workers","builder","workerInit","all","from","worker","addEventListener","once"],"sourceRoot":""}